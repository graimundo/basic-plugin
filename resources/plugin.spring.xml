<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:ws="http://jax-ws.dev.java.net/spring/core" 
       xmlns:wss="http://jax-ws.dev.java.net/spring/servlet" 
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
                           http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd"
       default-lazy-init="true">

  <!-- ========================================= -->
  <!--    BASE PLUGIN.SPRING.XML DECLARATIONS    -->
  <!-- ========================================= -->

  <context:annotation-config />

  <!-- (optional) When added as a bean to a Spring context this class will register the ApplicationContext as 
        a StandalongSpringPentahoObjectFactory with the PentahoSystem --> 
  <!-- <bean class="org.pentaho.platform.engine.core.system.objfac.spring.ApplicationContextPentahoSystemRegisterer" lazy-init="false"/> -->

  <!-- ========================================= -->
  <!--   ( USEFUL ) REUSABLE BEAN DECLARATIONS   -->
  <!-- ========================================= -->

  <!-- declared in pentahoObject.spring.xml, referenced via the pen:bean -->
  <pen:bean id="repository" class="org.pentaho.platform.api.repository2.unified.IUnifiedRepository" /> 

  <!-- ========================================= -->
  <!--    CONTENT GENERATOR BEAN DECLARATION     -->
  <!-- ========================================= -->

  <!-- content generator for .properties files -->
  <bean id="properties" class="pt.webdetails.basic.plugin.BasicPluginContentGenerator" scope="prototype"> 
    <constructor-arg ref="repository" />
  </bean> 

  <bean id="bp" class="pt.webdetails.basic.plugin.BasicPluginContentGenerator" scope="prototype"> 
    <constructor-arg ref="repository" />
  </bean> 

  <!-- ========================================= -->
  <!--    CG PERSPECTIVES BEAN DECLARATION       -->
  <!-- ========================================= -->

  <!-- see perspective set for EDIT action, in plugin.xml -->
  <bean id="properties.edit" class="pt.webdetails.basic.plugin.BasicPluginContentGenerator" scope="prototype"> 
    <constructor-arg ref="repository" />
  </bean>

  <bean id="bp.edit" class="pt.webdetails.basic.plugin.BasicPluginContentGenerator" scope="prototype"> 
    <constructor-arg ref="repository" />
  </bean> 

  <!-- ========================================= -->
  <!--      REST ENDPOINT BEAN DECLARATION       -->
  <!-- ========================================= -->

  <!-- ( mandatory ) JAX-RS beans entry point -->
  <bean id="api" class="org.pentaho.platform.web.servlet.JAXRSPluginServlet"/>

  <!-- REST api bean declaration -->
  <bean id="basicPluginRestApi" class="pt.webdetails.basic.plugin.web.BasicPluginRestApi">
    <constructor-arg ref="repository" />
  </bean>

  <!-- ========================================= -->
  <!--       FILE IMPORT / EXPORT HANDLING       -->
  <!-- ========================================= -->

  <!-- a bean that publishes all importHandlers / exportHandlers / mimeTypes declared here in the Pentaho platform -->
  <bean class="pt.webdetails.basic.plugin.BasicPluginImportExportHandlersPublisher" init-method="start" lazy-init="false">
    <property name="importHandlers">
      <util:list value-type="org.pentaho.platform.plugin.services.importer.IPlatformImportHandler">
        <ref local="basicPluginImportHandler" />
        <!-- add more importHandlers here -->
      </util:list>
    </property>
    <property name="mimeTypeResolvers">
      <util:list value-type="org.pentaho.platform.api.mimetype.IMimeType">
        <ref local="basicPluginMimeType" />
        <!-- add more mimeTypes here -->
      </util:list>
    </property>
  </bean>

  <!-- ========================================= -->
  <!--            FILE IMPORT HANDLER            -->
  <!-- ========================================= -->

  <!-- we'll just use the platform's standard importHandler, but we could've also implemented our own IPlatformImportHander -->
  <bean id="basicPluginImportHandler" class="org.pentaho.platform.plugin.services.importer.RepositoryFileImportFileHandler"> 
    <constructor-arg>
      <util:list value-type="org.pentaho.platform.plugin.services.importer.mimeType.MimeType">
        <ref bean="basicPluginMimeType" />
        <!-- add more mimeTypes here -->
      </util:list>
    </constructor-arg>
    <property name="repository" ref="repository" />
    <property name="defaultAclHandler">
      <bean class="org.pentaho.platform.repository2.unified.jcr.InheritDefaultAclHandler" /> <!-- we'll use the default acl handler -->
    </property>
  </bean>

  <!-- ========================================= -->
  <!--           MIME TYPE DECLARATION           -->
  <!-- ========================================= -->

  <bean id="basicPluginMimeType" class="org.pentaho.platform.core.mimetype.MimeType">
    <constructor-arg value="application/vnd.basic-plugin.text" /> 
    <constructor-arg>
      <util:list>
        <!-- adding .bp ( 'B'asic 'P'lugin ) file extension -->
        <!-- ( nothing more that a plain .txt file that we rename to a .bp extension ) -->
        <value>bp</value>
        <!-- add more file extensions here --> 
      </util:list>
    </constructor-arg>
    <property name="converter">
      <pen:bean class="org.pentaho.platform.api.repository2.unified.Converter">
        <pen:attributes>
          <pen:attr key="id" value="streamConverter"/> <!-- defined in importExport.xml -->
        </pen:attributes>
      </pen:bean>
    </property>
  </bean>

</beans>
